2020-6-12
	A、购物车功能
		一、购物车设计
			1. 用户未登录状态下：在不登陆的情况下把购物车信息写入cookie
				优点：
					1、不占用服务端存储空间
					2、代码实现简单。
					3、用户体验好
				缺点：
					1、cookie中保存的容量有限。最大4k
					2、把购物车信息保存在cookie中，更换设备购物车信息不能同步。
			2. 用户已登录状态下：把购物车信息保存到服务端的 Redis 中
				优点：
					1、更换设备购物车信息可以同步
				缺点：
					1、占用服务端存储空间
		二、创建工程
			1、usian_cart_service
				a、pom.xml
				b、application.yml
				c、启动类CartServiceApp
			2、usian_cart_feign
			3、usian_cart_web
				a、pom.xml
				b、application.yml
				c、启动类CartWebApp
	B、未登录状态下操作购物车
		一、业务逻辑
			1、从cookie中查询商品列表：Map<itemId,TbItem> 商品购买数量使用TbItem的num保存
				购物车已存在则直接返回
				购物车不存在则创建空的购物车并返回
			2、添加商品到购物车：
				如果购物车存在该商品，商品数量相加。
				如果购物车不存在该商品，根据商品id查询商品信息并添加到购物车列表
			3、把购车商品列表写入cookie。
				读写cookie可以使用CookieUtils工具类实现
		二、添加购物车
			usian_cart_web
				a、application.yml
					#购物车
					CART_COOKIE_KEY: CART_COOKIE_KEY
					CART_COOKIE_EXPIRE: 604800
				b、controller
					1、从cookie中查询商品列表
					2、添加商品到购物车
					3、把购车商品列表写入cookie
		三、查看购物车
			usian_cart_web
				a、controller
					先去创建空的list集合
					将获取到的购物车存到一个Map里面
					从购物车得到商品信息放到set里面
					遍历输出
					存到list集合里
		四、修改购物车
			usian_cart_web
				a、controller
					1、获得cookie中的购物车
					2、修改购物车中的商品
					3、把购物车写到cookie
		五、删除购物车
			usian_cart_web
				a、controller
					将获取到的购物车存到一个Map里面
					根据itemId对购物车里面的信息进行移除
					最后将购物车里面的信息重新写到cookie里面
	C、登录状态操作购物车
		一、业务逻辑
			1、使用redis存储商品列表：
			2、使用hash对购物车进行归类
		二、添加购物车
			1）usian_cart_web
				1、controller
					/***********在用户已登录的状态**********/
					// 1、从redis中查询商品列表。
					Map<String,TbItem> cart = getCartFromRedis(userId);
					//2、将商品添加大购物车中
					this.addItemToCart(cart,itemId,num);
					//3、将购物车缓存到 redis 中
					Boolean addCartToRedis = this.addCartToRedis(userId, cart);
					if(addCartToRedis){
						return Result.ok();
					}
					return Result.error("error");
			2）usian_cart_feign
			3）usian_cart_service
				1、application.yml
					#购物车
					CART_REDIS_KEY: CART_REDIS_KEY
				2、service
					//根据用户 ID 查询用户购物车
					public Map<String, TbItem> selectCartByUserId(String userId) {。。。。}
					//缓存购物车
					public Boolean insertCart(String userId, Map<String, TbItem> cart) {。。。。}
				3、	controller
					