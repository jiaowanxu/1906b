2020/06/08
	学习目标
		查询商品详情的方案
			方案一 网页静态化方案
					缺点：过于繁琐，在实际开发中不推荐使用
			方案二 redis缓存商品信息方案
					使用redis做缓存，业务逻辑：
					1、根据商品id到redis中查询查得到，直接返回

					2、查不到，查询mysql，数据放到redis中设置缓存的有效期一天的时间，可以根据实际情况调整。
					
					使用String类型来保存商品数据，
					
				实现步骤
					
				查询商品详情
					创建usian_detail_web工程
						基本启动器、pom.xml、启动类
					
					修改usian_item_service
						在查询商品之前，对redis缓存中的数据进行查询。查不到，查询mysql
						
					测试
						查看redis中是否创建出集群节点的key
		
		缓存同步
			使用消息中间件实现redis中商品信息的同步：后台修改商品则直接删除redis中的商品
				就是讲商品的增删改的时候清口redis中的缓存数据，当下次查询时，从数据库查询新数据并存入redis中
		
		缓存穿透
			 缓存穿透是指缓存和数据库中都没有的数据	，而用户不断发起请求，	，对数据库造成压力，甚至压垮数据库。
			解决办法：
					(就是将redis中空的数据也进行缓存处理)
			    //把空对象保存到缓存
				   redisClient.set(ITEM_INFO + ":" + itemId + ":"+ PARAM,null);
				//设置缓存的有效期
				  redisClient.expire(ITEM_INFO + ":" + itemId + ":"+ PARAM,30);
				  
		缓存击穿
			是指一个key非常热点，在不停的扛着大并发，大并发集中对这一个点进行访问，
			当这个key在失效的瞬间，持续的大并发就穿破缓存，直接请求数据库，就像在一个屏障上凿开了一个洞。
		   解决方案两种：
				1. 设置热点数据永远不过期。
						要保证redis的高可用，不推荐使用
				2. 加分布式锁
					调用自己封装的redis原生态的setnx方法，解决缓存击穿
					redisClient.setnx("DESC_LOCK_KEY:"+itemId, itemId, 30)

			